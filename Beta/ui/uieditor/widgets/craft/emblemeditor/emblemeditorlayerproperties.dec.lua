require( "ui.uieditor.widgets.CAC.cac_ButtonBoxLrgInactiveStroke" )

CoD.EmblemEditorLayerProperties = InheritFrom( LUI.UIElement )
CoD.EmblemEditorLayerProperties.new = function ( menu, controller )
	local self = LUI.UIElement.new()
	if PreLoadFunc then
		PreLoadFunc( self, controller )
	end
	self:setUseStencil( false )
	self:setClass( CoD.EmblemEditorLayerProperties )
	self.id = "EmblemEditorLayerProperties"
	self.soundSet = "default"
	self:setLeftRight( true, false, 0, 168 )
	self:setTopBottom( true, false, 0, 192 )
	self.anyChildUsesUpdateState = true
	
	local Image0 = LUI.UIImage.new()
	Image0:setLeftRight( true, true, 0.45, 0 )
	Image0:setTopBottom( true, true, 0, 0 )
	Image0:setRGB( 0, 0, 0 )
	Image0:setAlpha( 0.5 )
	self:addElement( Image0 )
	self.Image0 = Image0
	
	local cacButtonBoxLrgInactiveStroke0 = CoD.cac_ButtonBoxLrgInactiveStroke.new( menu, controller )
	cacButtonBoxLrgInactiveStroke0:setLeftRight( true, false, -2, 170 )
	cacButtonBoxLrgInactiveStroke0:setTopBottom( true, false, -1.45, 192 )
	self:addElement( cacButtonBoxLrgInactiveStroke0 )
	self.cacButtonBoxLrgInactiveStroke0 = cacButtonBoxLrgInactiveStroke0
	
	local positionText = LUI.UIText.new()
	positionText:setLeftRight( true, false, 10, 64.96 )
	positionText:setTopBottom( true, false, 73.55, 92.55 )
	positionText:setRGB( 0.56, 0.6, 0.61 )
	positionText:setText( Engine.Localize( "MENU_EMBLEM_LAYER_PROPERTY_POSITION" ) )
	positionText:setTTF( "fonts/RefrigeratorDeluxe-Regular.ttf" )
	positionText:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_LEFT )
	positionText:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	self:addElement( positionText )
	self.positionText = positionText
	
	local scaleText = LUI.UIText.new()
	scaleText:setLeftRight( true, false, 10, 64.96 )
	scaleText:setTopBottom( true, false, 97.55, 116.55 )
	scaleText:setRGB( 0.56, 0.6, 0.61 )
	scaleText:setText( Engine.Localize( "MENU_EMBLEM_LAYER_PROPERTY_SCALE" ) )
	scaleText:setTTF( "fonts/RefrigeratorDeluxe-Regular.ttf" )
	scaleText:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_LEFT )
	scaleText:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	self:addElement( scaleText )
	self.scaleText = scaleText
	
	local rotationText = LUI.UIText.new()
	rotationText:setLeftRight( true, false, 10, 136.96 )
	rotationText:setTopBottom( true, false, 133, 152 )
	rotationText:setRGB( 0.56, 0.6, 0.61 )
	rotationText:setText( Engine.Localize( "MENU_EMBLEM_LAYER_PROPERTY_ROTATION" ) )
	rotationText:setTTF( "fonts/RefrigeratorDeluxe-Regular.ttf" )
	rotationText:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_LEFT )
	rotationText:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	self:addElement( rotationText )
	self.rotationText = rotationText
	
	local opacityText = LUI.UIText.new()
	opacityText:setLeftRight( true, false, 10, 84.96 )
	opacityText:setTopBottom( true, false, 156, 175 )
	opacityText:setRGB( 0.56, 0.6, 0.61 )
	opacityText:setText( Engine.Localize( "MENU_EMBLEM_LAYER_OPACITY" ) )
	opacityText:setTTF( "fonts/RefrigeratorDeluxe-Regular.ttf" )
	opacityText:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_LEFT )
	opacityText:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	self:addElement( opacityText )
	self.opacityText = opacityText
	
	local xPositionValue = LUI.UIText.new()
	xPositionValue:setLeftRight( true, false, 87.94, 116.96 )
	xPositionValue:setTopBottom( true, false, 73.55, 92.55 )
	xPositionValue:setTTF( "fonts/escom.ttf" )
	xPositionValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_LEFT )
	xPositionValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	xPositionValue:linkToElementModel( self, "xposition", true, function ( model )
		local modelValue = Engine.GetModelValue( model )
		if modelValue then
			xPositionValue:setText( Engine.Localize( modelValue ) )
		end
	end )
	self:addElement( xPositionValue )
	self.xPositionValue = xPositionValue
	
	local yPositionValue = LUI.UIText.new()
	yPositionValue:setLeftRight( true, false, 130.96, 156.94 )
	yPositionValue:setTopBottom( true, false, 73.55, 92.55 )
	yPositionValue:setTTF( "fonts/escom.ttf" )
	yPositionValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_RIGHT )
	yPositionValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	yPositionValue:linkToElementModel( self, "yposition", true, function ( model )
		local modelValue = Engine.GetModelValue( model )
		if modelValue then
			yPositionValue:setText( Engine.Localize( modelValue ) )
		end
	end )
	self:addElement( yPositionValue )
	self.yPositionValue = yPositionValue
	
	local xScaleValue = LUI.UIText.new()
	xScaleValue:setLeftRight( true, false, 87.94, 116.96 )
	xScaleValue:setTopBottom( true, false, 97.55, 116.55 )
	xScaleValue:setTTF( "fonts/escom.ttf" )
	xScaleValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_LEFT )
	xScaleValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	xScaleValue:linkToElementModel( self, "xscale", true, function ( model )
		local modelValue = Engine.GetModelValue( model )
		if modelValue then
			xScaleValue:setText( Engine.Localize( modelValue ) )
		end
	end )
	self:addElement( xScaleValue )
	self.xScaleValue = xScaleValue
	
	local yScaleValue = LUI.UIText.new()
	yScaleValue:setLeftRight( true, false, 130.96, 156.94 )
	yScaleValue:setTopBottom( true, false, 97.55, 116.55 )
	yScaleValue:setTTF( "fonts/escom.ttf" )
	yScaleValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_RIGHT )
	yScaleValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	yScaleValue:linkToElementModel( self, "yscale", true, function ( model )
		local modelValue = Engine.GetModelValue( model )
		if modelValue then
			yScaleValue:setText( Engine.Localize( modelValue ) )
		end
	end )
	self:addElement( yScaleValue )
	self.yScaleValue = yScaleValue
	
	local rotationValue = LUI.UIText.new()
	rotationValue:setLeftRight( true, false, 88.94, 117.96 )
	rotationValue:setTopBottom( true, false, 134, 153 )
	rotationValue:setTTF( "fonts/escom.ttf" )
	rotationValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_LEFT )
	rotationValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	rotationValue:linkToElementModel( self, "rotation", true, function ( model )
		local modelValue = Engine.GetModelValue( model )
		if modelValue then
			rotationValue:setText( Engine.Localize( modelValue ) )
		end
	end )
	self:addElement( rotationValue )
	self.rotationValue = rotationValue
	
	local opacityValue = LUI.UIText.new()
	opacityValue:setLeftRight( true, false, 88.94, 117.96 )
	opacityValue:setTopBottom( true, false, 157, 176 )
	opacityValue:setTTF( "fonts/escom.ttf" )
	opacityValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_LEFT )
	opacityValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	opacityValue:subscribeToGlobalModel( controller, "EmblemSelectedLayerProperties", "max_opacity", function ( model )
		local modelValue = Engine.GetModelValue( model )
		if modelValue then
			opacityValue:setText( Engine.Localize( AppendString( "%", modelValue ) ) )
		end
	end )
	self:addElement( opacityValue )
	self.opacityValue = opacityValue
	
	local layersUsedValue = LUI.UIText.new()
	layersUsedValue:setLeftRight( true, false, 90.96, 157 )
	layersUsedValue:setTopBottom( true, false, 11, 30 )
	layersUsedValue:setTTF( "fonts/escom.ttf" )
	layersUsedValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_RIGHT )
	layersUsedValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	layersUsedValue:subscribeToGlobalModel( controller, "EmblemProperties", "layersUsedFraction", function ( model )
		local modelValue = Engine.GetModelValue( model )
		if modelValue then
			layersUsedValue:setText( Engine.Localize( modelValue ) )
		end
	end )
	self:addElement( layersUsedValue )
	self.layersUsedValue = layersUsedValue
	
	local TextBox0 = LUI.UIText.new()
	TextBox0:setLeftRight( true, false, 59.92, 76.94 )
	TextBox0:setTopBottom( true, false, 73.55, 92.55 )
	TextBox0:setRGB( 0.56, 0.6, 0.61 )
	TextBox0:setText( Engine.Localize( "MENU_EMBLEM_X_TEXT" ) )
	TextBox0:setTTF( "fonts/RefrigeratorDeluxe-Regular.ttf" )
	TextBox0:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_LEFT )
	TextBox0:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	self:addElement( TextBox0 )
	self.TextBox0 = TextBox0
	
	local TextBox1 = LUI.UIText.new()
	TextBox1:setLeftRight( true, false, 59.92, 76.94 )
	TextBox1:setTopBottom( true, false, 97.55, 116.55 )
	TextBox1:setRGB( 0.56, 0.6, 0.61 )
	TextBox1:setText( Engine.Localize( "MENU_EMBLEM_X_TEXT" ) )
	TextBox1:setTTF( "fonts/RefrigeratorDeluxe-Regular.ttf" )
	TextBox1:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_LEFT )
	TextBox1:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	self:addElement( TextBox1 )
	self.TextBox1 = TextBox1
	
	local TextBox2 = LUI.UIText.new()
	TextBox2:setLeftRight( true, false, 119.94, 136.96 )
	TextBox2:setTopBottom( true, false, 73.55, 92.55 )
	TextBox2:setRGB( 0.56, 0.6, 0.61 )
	TextBox2:setText( Engine.Localize( "MENU_EMBLEM_Y_TEXT" ) )
	TextBox2:setTTF( "fonts/RefrigeratorDeluxe-Regular.ttf" )
	TextBox2:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_LEFT )
	TextBox2:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	self:addElement( TextBox2 )
	self.TextBox2 = TextBox2
	
	local TextBox3 = LUI.UIText.new()
	TextBox3:setLeftRight( true, false, 119.94, 136.96 )
	TextBox3:setTopBottom( true, false, 97.55, 116.55 )
	TextBox3:setRGB( 0.56, 0.6, 0.61 )
	TextBox3:setText( Engine.Localize( "MENU_EMBLEM_Y_TEXT" ) )
	TextBox3:setTTF( "fonts/RefrigeratorDeluxe-Regular.ttf" )
	TextBox3:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_LEFT )
	TextBox3:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	self:addElement( TextBox3 )
	self.TextBox3 = TextBox3
	
	local TextBox4 = LUI.UIText.new()
	TextBox4:setLeftRight( true, false, 10, 126.96 )
	TextBox4:setTopBottom( true, false, 10, 29 )
	TextBox4:setRGB( 0.56, 0.6, 0.61 )
	TextBox4:setText( Engine.Localize( "MENU_EMBLEM_LAYERS_USED" ) )
	TextBox4:setTTF( "fonts/RefrigeratorDeluxe-Regular.ttf" )
	TextBox4:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_LEFT )
	TextBox4:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	self:addElement( TextBox4 )
	self.TextBox4 = TextBox4
	
	local CategoryListLine = LUI.UIImage.new()
	CategoryListLine:setLeftRight( true, true, 0, 0 )
	CategoryListLine:setTopBottom( true, false, 60, 68 )
	CategoryListLine:setRGB( 0.9, 0.9, 0.9 )
	CategoryListLine:setAlpha( 0.45 )
	CategoryListLine:setImage( RegisterImage( "uie_t7_menu_cac_tabline" ) )
	CategoryListLine:setMaterial( LUI.UIImage.GetCachedMaterial( "ui_add" ) )
	self:addElement( CategoryListLine )
	self.CategoryListLine = CategoryListLine
	
	local CategoryListLine0 = LUI.UIImage.new()
	CategoryListLine0:setLeftRight( true, true, 0, 0 )
	CategoryListLine0:setTopBottom( true, false, 121.5, 129.5 )
	CategoryListLine0:setRGB( 0.9, 0.9, 0.9 )
	CategoryListLine0:setAlpha( 0.45 )
	CategoryListLine0:setImage( RegisterImage( "uie_t7_menu_cac_tabline" ) )
	CategoryListLine0:setMaterial( LUI.UIImage.GetCachedMaterial( "ui_add" ) )
	self:addElement( CategoryListLine0 )
	self.CategoryListLine0 = CategoryListLine0
	
	local linkedLayerText = LUI.UIText.new()
	linkedLayerText:setLeftRight( true, false, 10, 126.96 )
	linkedLayerText:setTopBottom( true, false, 32, 51 )
	linkedLayerText:setRGB( 0.56, 0.6, 0.61 )
	linkedLayerText:setText( Engine.Localize( "MENU_LINKED_LAYERS" ) )
	linkedLayerText:setTTF( "fonts/RefrigeratorDeluxe-Regular.ttf" )
	linkedLayerText:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_LEFT )
	linkedLayerText:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	self:addElement( linkedLayerText )
	self.linkedLayerText = linkedLayerText
	
	local linkedLayersValue = LUI.UIText.new()
	linkedLayersValue:setLeftRight( true, false, 90.96, 157 )
	linkedLayersValue:setTopBottom( true, false, 32, 51 )
	linkedLayersValue:setTTF( "fonts/escom.ttf" )
	linkedLayersValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_RIGHT )
	linkedLayersValue:setAlignment( Enum.LUIAlignment.LUI_ALIGNMENT_TOP )
	linkedLayersValue:subscribeToGlobalModel( controller, "EmblemProperties", "linkedLayerCount", function ( model )
		local modelValue = Engine.GetModelValue( model )
		if modelValue then
			linkedLayersValue:setText( Engine.Localize( modelValue ) )
		end
	end )
	self:addElement( linkedLayersValue )
	self.linkedLayersValue = linkedLayersValue
	
	self.clipsPerState = {
		DefaultState = {
			DefaultClip = function ()
				self:setupElementClipCounter( 19 )
				Image0:completeAnimation()
				self.Image0:setLeftRight( true, true, 0.45, 0 )
				self.Image0:setTopBottom( true, true, 0, -122 )
				self.clipFinished( Image0, {} )
				cacButtonBoxLrgInactiveStroke0:completeAnimation()
				self.cacButtonBoxLrgInactiveStroke0:setLeftRight( true, false, -2, 170 )
				self.cacButtonBoxLrgInactiveStroke0:setTopBottom( true, false, -1.45, 66 )
				self.clipFinished( cacButtonBoxLrgInactiveStroke0, {} )
				positionText:completeAnimation()
				self.positionText:setAlpha( 0 )
				self.clipFinished( positionText, {} )
				scaleText:completeAnimation()
				self.scaleText:setAlpha( 0 )
				self.clipFinished( scaleText, {} )
				rotationText:completeAnimation()
				self.rotationText:setAlpha( 0 )
				self.clipFinished( rotationText, {} )
				opacityText:completeAnimation()
				self.opacityText:setAlpha( 0 )
				self.clipFinished( opacityText, {} )
				xPositionValue:completeAnimation()
				self.xPositionValue:setAlpha( 0 )
				self.clipFinished( xPositionValue, {} )
				yPositionValue:completeAnimation()
				self.yPositionValue:setAlpha( 0 )
				self.clipFinished( yPositionValue, {} )
				xScaleValue:completeAnimation()
				self.xScaleValue:setAlpha( 0 )
				self.clipFinished( xScaleValue, {} )
				yScaleValue:completeAnimation()
				self.yScaleValue:setAlpha( 0 )
				self.clipFinished( yScaleValue, {} )
				rotationValue:completeAnimation()
				self.rotationValue:setAlpha( 0 )
				self.clipFinished( rotationValue, {} )
				opacityValue:completeAnimation()
				self.opacityValue:setAlpha( 0 )
				self.clipFinished( opacityValue, {} )
				layersUsedValue:completeAnimation()
				self.layersUsedValue:setAlpha( 1 )
				self.clipFinished( layersUsedValue, {} )
				TextBox0:completeAnimation()
				self.TextBox0:setAlpha( 0 )
				self.clipFinished( TextBox0, {} )
				TextBox1:completeAnimation()
				self.TextBox1:setAlpha( 0 )
				self.clipFinished( TextBox1, {} )
				TextBox2:completeAnimation()
				self.TextBox2:setAlpha( 0 )
				self.clipFinished( TextBox2, {} )
				TextBox3:completeAnimation()
				self.TextBox3:setAlpha( 0 )
				self.clipFinished( TextBox3, {} )
				CategoryListLine:completeAnimation()
				self.CategoryListLine:setAlpha( 0 )
				self.clipFinished( CategoryListLine, {} )
				CategoryListLine0:completeAnimation()
				self.CategoryListLine0:setAlpha( 0 )
				self.clipFinished( CategoryListLine0, {} )
			end
		},
		EditModeLayerProperties = {
			DefaultClip = function ()
				self:setupElementClipCounter( 19 )
				Image0:completeAnimation()
				self.Image0:setLeftRight( true, true, 0.45, 0 )
				self.Image0:setTopBottom( true, true, 0, 0 )
				self.clipFinished( Image0, {} )
				cacButtonBoxLrgInactiveStroke0:completeAnimation()
				self.cacButtonBoxLrgInactiveStroke0:setLeftRight( true, false, -2, 170 )
				self.cacButtonBoxLrgInactiveStroke0:setTopBottom( true, false, -1.45, 192 )
				self.clipFinished( cacButtonBoxLrgInactiveStroke0, {} )
				positionText:completeAnimation()
				self.positionText:setAlpha( 1 )
				self.clipFinished( positionText, {} )
				scaleText:completeAnimation()
				self.scaleText:setAlpha( 1 )
				self.clipFinished( scaleText, {} )
				rotationText:completeAnimation()
				self.rotationText:setAlpha( 1 )
				self.clipFinished( rotationText, {} )
				opacityText:completeAnimation()
				self.opacityText:setAlpha( 1 )
				self.clipFinished( opacityText, {} )
				xPositionValue:completeAnimation()
				self.xPositionValue:setAlpha( 1 )
				self.clipFinished( xPositionValue, {} )
				yPositionValue:completeAnimation()
				self.yPositionValue:setAlpha( 1 )
				self.clipFinished( yPositionValue, {} )
				xScaleValue:completeAnimation()
				self.xScaleValue:setAlpha( 1 )
				self.clipFinished( xScaleValue, {} )
				yScaleValue:completeAnimation()
				self.yScaleValue:setAlpha( 1 )
				self.clipFinished( yScaleValue, {} )
				rotationValue:completeAnimation()
				self.rotationValue:setAlpha( 1 )
				self.clipFinished( rotationValue, {} )
				opacityValue:completeAnimation()
				self.opacityValue:setAlpha( 1 )
				self.clipFinished( opacityValue, {} )
				layersUsedValue:completeAnimation()
				self.layersUsedValue:setAlpha( 1 )
				self.clipFinished( layersUsedValue, {} )
				TextBox0:completeAnimation()
				self.TextBox0:setAlpha( 1 )
				self.clipFinished( TextBox0, {} )
				TextBox1:completeAnimation()
				self.TextBox1:setAlpha( 1 )
				self.clipFinished( TextBox1, {} )
				TextBox2:completeAnimation()
				self.TextBox2:setAlpha( 1 )
				self.clipFinished( TextBox2, {} )
				TextBox3:completeAnimation()
				self.TextBox3:setAlpha( 1 )
				self.clipFinished( TextBox3, {} )
				CategoryListLine:completeAnimation()
				self.CategoryListLine:setAlpha( 0.45 )
				self.clipFinished( CategoryListLine, {} )
				CategoryListLine0:completeAnimation()
				self.CategoryListLine0:setAlpha( 0.45 )
				self.clipFinished( CategoryListLine0, {} )
			end
		}
	}
	LUI.OverrideFunction_CallOriginalSecond( self, "close", function ( self )
		self.cacButtonBoxLrgInactiveStroke0:close()
		self.xPositionValue:close()
		self.yPositionValue:close()
		self.xScaleValue:close()
		self.yScaleValue:close()
		self.rotationValue:close()
		self.opacityValue:close()
		self.layersUsedValue:close()
		self.linkedLayersValue:close()
	end )
	if PostLoadFunc then
		PostLoadFunc( self, controller, menu )
	end
	return self
end

